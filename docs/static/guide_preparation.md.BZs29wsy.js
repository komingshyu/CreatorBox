import{_ as a,c as i,o as t,ag as n}from"./chunks/framework.BC-Z1qvd.js";const g=JSON.parse('{"title":"准备工作","description":"","frontmatter":{},"headers":[],"relativePath":"guide/preparation.md","filePath":"guide/preparation.md","lastUpdated":1744127852000}'),e={name:"guide/preparation.md"};function l(h,s,p,o,k,r){return t(),i("div",null,s[0]||(s[0]=[n(`<h1 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h1><p>涉及第三方的ApiKey的申请及配置</p><h2 id="申请" tabindex="-1">申请 <a class="header-anchor" href="#申请" aria-label="Permalink to &quot;申请&quot;">​</a></h2><p>所有均为免费方案</p><h3 id="模型库" tabindex="-1">模型库 <a class="header-anchor" href="#模型库" aria-label="Permalink to &quot;模型库&quot;">​</a></h3><h4 id="huggingface" tabindex="-1">Huggingface <a class="header-anchor" href="#huggingface" aria-label="Permalink to &quot;Huggingface&quot;">​</a></h4><p>申请链接 <a href="https://huggingface.co/settings/tokens" target="_blank" rel="noreferrer">https://huggingface.co/settings/tokens</a></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>注意：需要科学上网</p></div><h3 id="语言模型" tabindex="-1">语言模型 <a class="header-anchor" href="#语言模型" aria-label="Permalink to &quot;语言模型&quot;">​</a></h3><h4 id="google-gemini" tabindex="-1">Google Gemini <a class="header-anchor" href="#google-gemini" aria-label="Permalink to &quot;Google Gemini&quot;">​</a></h4><p>申请链接 <a href="https://aistudio.google.com/apikey" target="_blank" rel="noreferrer">https://aistudio.google.com/apikey</a></p><p>推荐指数 🔥🔥🔥🔥🔥 免费额度满足日常使用</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>注意：需要科学上网</p></div><h4 id="dashscope-qwen" tabindex="-1">DashScope Qwen <a class="header-anchor" href="#dashscope-qwen" aria-label="Permalink to &quot;DashScope Qwen&quot;">​</a></h4><p>申请链接 <a href="https://bailian.console.aliyun.com/console?tab=model#/api-key" target="_blank" rel="noreferrer">https://bailian.console.aliyun.com/console?tab=model#/api-key</a></p><p>新人免费开通送100万Tokens，有效期通常是 30~180 天</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>注意：有效期一般是 30 ~ 180 天</p></div><h3 id="辅助" tabindex="-1">辅助 <a class="header-anchor" href="#辅助" aria-label="Permalink to &quot;辅助&quot;">​</a></h3><h4 id="ngrok-内外透传" tabindex="-1">Ngrok 内外透传 <a class="header-anchor" href="#ngrok-内外透传" aria-label="Permalink to &quot;Ngrok 内外透传&quot;">​</a></h4><p>申请链接 <a href="https://dashboard.ngrok.com/domains" target="_blank" rel="noreferrer">https://dashboard.ngrok.com/domains</a></p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>注意：非必须，本地部署则不需要</p></div><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><p>以下是需要配置的环境变量和相应的 API 密钥。请根据你的需求替换 <code>&lt;GOOGLE_API_KEY&gt;</code>、<code>&lt;DASHSCOPE_API_KEY&gt;</code>、<code>&lt;HUGGINGFACEHUB_API_TOKEN&gt;</code> 和 <code>&lt;NGROK_API_KEY&gt;</code>、<code>&lt;NGROK_HOSTNAME&gt;</code> 为实际的密钥。</p><p>所有信息均存储在本地电脑的环境变量中，程序不会保存 <em><strong>apikey</strong></em> 信息</p><h3 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h3><p>1.右键点击 <strong>此电脑</strong> 并选择 <strong>属性</strong></p><p>2.点击 <strong>高级系统设置</strong>，然后选择 <strong>环境变量</strong></p><p>3.在 <strong>系统变量</strong> 部分，点击 <strong>新建</strong> 并分别添加以下变量：</p><ul><li><p><code>GOOGLE_API_KEY</code></p></li><li><p><code>DASHSCOPE_API_KEY</code></p></li><li><p><code>HUGGINGFACEHUB_API_TOKEN</code></p></li><li><p><code>NGROK_API_KEY</code></p></li><li><p><code>NGROK_HOSTNAME</code></p></li></ul><p>4.进入<strong>命令提示符</strong>或<strong>PowerShell</strong>，运行以下命令验证：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:GOOGLE_API_KEY</span></span></code></pre></div><h3 id="linux-macos" tabindex="-1">Linux/macOS <a class="header-anchor" href="#linux-macos" aria-label="Permalink to &quot;Linux/macOS&quot;">​</a></h3><p>1.打开终端并编辑配置文件 (~/.bashrc 或 ~/.zshrc)，添加以下内容：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># google</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GOOGLE_API_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;GOOGLE_API_KEY&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># dashscope</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DASHSCOPE_API_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;DASHSCOPE_API_KEY&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># huggingface</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HUGGINGFACEHUB_API_TOKEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;HUGGINGFACEHUB_API_TOKEN&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ngrok</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NGROK_API_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;NGROK_API_KEY&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NGROK_HOSTNAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;NGROK_HOSTNAME&gt;&quot;</span></span></code></pre></div><p>2.保存文件并运行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bashrc</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 或 source ~/.zshrc</span></span></code></pre></div><p>4.在终端中验证环境变量：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $GOOGLE_API_KEY</span></span></code></pre></div><h3 id="google-colab" tabindex="-1">Google Colab <a class="header-anchor" href="#google-colab" aria-label="Permalink to &quot;Google Colab&quot;">​</a></h3><p>1.新建单元格复制并运行：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># google</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.environ[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;GOOGLE_API_KEY&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;GOOGLE_API_KEY&gt;&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># dashscope</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.environ[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DASHSCOPE_API_KEY&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;DASHSCOPE_API_KEY&gt;&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># huggingface</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.environ[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;HUGGINGFACEHUB_API_TOKEN&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;HUGGINGFACEHUB_API_TOKEN&gt;&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ngrok</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.environ[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;NGROK_API_KEY&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;NGROK_API_KEY&gt;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.environ[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;NGROK_HOSTNAME&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;NGROK_API_KEY&gt;&#39;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Colab 使用见 《<a href="deploy-colab.html#_2-环境变量">远程部署</a>》章节</p></div>`,42)]))}const c=a(e,[["render",l]]);export{g as __pageData,c as default};
